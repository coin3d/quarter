version: 1.0.0-{branch}-ci-{build}
branches:
  only:
  - AppVeyorCI
#shallow clone does not work when subrepos are involved!
#shallow_clone: true
environment:
  matrix:
    #- APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    #  CMAKE_GENERATOR: 'Unix Makefiles'
    #  configuration: Release
    #  platform: x86
    #  CMAKE_CONFIGURATION: Release
    #  CMAKE_PLATFORM: x86
    #  CMAKE_ARCH_FLAGS: -m32
    #  COMPILER_ID: gcc5
    ##  QT_DIR: C:\Qt\5.10.1\msvc2015
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      CMAKE_GENERATOR: 'Unix Makefiles'
      configuration: Release
      platform: x64
      CMAKE_CONFIGURATION: Release
      CMAKE_PLATFORM: x64
      CMAKE_ARCH_FLAGS: -m64
      COMPILER_ID: gcc5
    #  QT_DIR: C:\Qt\5.10.1\msvc2015
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      CMAKE_GENERATOR: 'Visual Studio 14 2015'
      configuration: Release
      platform: x86
      COMPILER_ID: msvc14
      QT_DIR: C:\Qt\5.10.1\msvc2015
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      CMAKE_GENERATOR: 'Visual Studio 14 2015 Win64'
      configuration: Release
      platform: x64
      COMPILER_ID: msvc14
      QT_DIR: C:\Qt\5.10.1\msvc2015_64
    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    #  CMAKE_GENERATOR: 'Visual Studio 15 2017'
    #  configuration: Release
    #  platform: x86
    #  COMPILER_ID: msvc17
    ##  QT_DIR: C:\Qt\5.10.1\msvc2017
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: 'Visual Studio 15 2017 Win64'
      configuration: Release
      platform: x64
      COMPILER_ID: msvc17
      QT_DIR: C:\Qt\5.10.1\msvc2017_64
install:
  - sh: |
      if [ "$CMAKE_PLATFORM" == "x86" ]
      then
        sudo apt-get install freeglut3-dev:i386 -y
        sudo apt-get install qt5-default:i386 -y
      elif [ "$CMAKE_PLATFORM" == "x64" ]
      then
        sudo apt-get install freeglut3-dev -y
        sudo apt-get install qt5-default -y
      fi
      sudo apt-get install gcc-multilib -y
      sudo apt-get install g++-multilib -y
  - sh: qtchooser -l
  - sh: which moc
  - sh: which uic
before_build:
  - cmd: |
      pwd
      set DOWNLOAD_FILE_SUPERGLU=superglu-1.3.0-%COMPILER_ID%-%PLATFORM%-%CONFIGURATION%.zip
      set DOWNLOAD_ADDRESS_SUPERGLU=https://ci.appveyor.com/api/projects/VolkerEnderlein/superglu/artifacts/%DOWNLOAD_FILE_SUPERGLU%
      curl -fsSL -G -o "%DOWNLOAD_FILE_SUPERGLU%" "%DOWNLOAD_ADDRESS_SUPERGLU%" --data-urlencode "branch=AppVeyorCI" --data-urlencode "job=Environment: APPVEYOR_BUILD_WORKER_IMAGE=%APPVEYOR_BUILD_WORKER_IMAGE%, CMAKE_GENERATOR=%CMAKE_GENERATOR%, configuration=%CONFIGURATION%, platform=%PLATFORM%, COMPILER_ID=%COMPILER_ID%"
      set DOWNLOAD_FILE_COIN=coin-4.0.0-%COMPILER_ID%-%PLATFORM%-%CONFIGURATION%.zip
      set DOWNLOAD_ADDRESS_COIN=https://ci.appveyor.com/api/projects/VolkerEnderlein/coin/artifacts/%DOWNLOAD_FILE_COIN%
      curl -fsSL -G -o "%DOWNLOAD_FILE_COIN%" "%DOWNLOAD_ADDRESS_COIN%" --data-urlencode "branch=AppVeyorCI" --data-urlencode "job=Environment: APPVEYOR_BUILD_WORKER_IMAGE=%APPVEYOR_BUILD_WORKER_IMAGE%, CMAKE_GENERATOR=%CMAKE_GENERATOR%, configuration=%CONFIGURATION%, platform=%PLATFORM%, COMPILER_ID=%COMPILER_ID%"
      mkdir %APPVEYOR_BUILD_FOLDER%\downloads
      7z x %DOWNLOAD_FILE_SUPERGLU% -o%APPVEYOR_BUILD_FOLDER%\downloads
      7z x %DOWNLOAD_FILE_COIN% -o%APPVEYOR_BUILD_FOLDER%\downloads
  - cmd: cmake -H. -Bbuild -G "%CMAKE_GENERATOR%" -DCMAKE_CONFIGURATION_TYPES=%CONFIGURATION% -DCMAKE_TRY_COMPILE_CONFIGURATION=%CONFIGURATION% -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\Coin3D -DCMAKE_PREFIX_PATH=%APPVEYOR_BUILD_FOLDER%\downloads\Coin3D;%QT_DIR%
  - sh: |
      pwd
      DOWNLOAD_FILE_SUPERGLU=superglu-1.3.0-$COMPILER_ID-$CMAKE_PLATFORM-$CMAKE_CONFIGURATION.tar.gz
      DOWNLOAD_ADDRESS_SUPERGLU=https://ci.appveyor.com/api/projects/VolkerEnderlein/superglu/artifacts/$DOWNLOAD_FILE_SUPERGLU
      curl -fsSL -G -o "$DOWNLOAD_FILE_SUPERGLU" "$DOWNLOAD_ADDRESS_SUPERGLU" --data-urlencode "branch=AppVeyorCI" --data-urlencode "job=Environment: APPVEYOR_BUILD_WORKER_IMAGE=$APPVEYOR_BUILD_WORKER_IMAGE, CMAKE_GENERATOR=$CMAKE_GENERATOR, configuration=$CMAKE_CONFIGURATION, platform=$CMAKE_PLATFORM, CMAKE_CONFIGURATION=$CMAKE_CONFIGURATION, CMAKE_PLATFORM=$CMAKE_PLATFORM, CMAKE_ARCH_FLAGS=$CMAKE_ARCH_FLAGS, COMPILER_ID=$COMPILER_ID"
      DOWNLOAD_FILE_COIN=coin-4.0.0-$COMPILER_ID-$CMAKE_PLATFORM-$CMAKE_CONFIGURATION.tar.gz
      DOWNLOAD_ADDRESS_COIN=https://ci.appveyor.com/api/projects/VolkerEnderlein/coin/artifacts/$DOWNLOAD_FILE_COIN
      curl -fsSL -G -o "$DOWNLOAD_FILE_COIN" "$DOWNLOAD_ADDRESS_COIN" --data-urlencode "branch=AppVeyorCI" --data-urlencode "job=Environment: APPVEYOR_BUILD_WORKER_IMAGE=$APPVEYOR_BUILD_WORKER_IMAGE, CMAKE_GENERATOR=$CMAKE_GENERATOR, configuration=$CMAKE_CONFIGURATION, platform=$CMAKE_PLATFORM, CMAKE_CONFIGURATION=$CMAKE_CONFIGURATION, CMAKE_PLATFORM=$CMAKE_PLATFORM, CMAKE_ARCH_FLAGS=$CMAKE_ARCH_FLAGS, COMPILER_ID=$COMPILER_ID"
      mkdir $APPVEYOR_BUILD_FOLDER/downloads
      tar -xzvf $DOWNLOAD_FILE_SUPERGLU -C $APPVEYOR_BUILD_FOLDER/downloads
      tar -xzvf $DOWNLOAD_FILE_COIN -C $APPVEYOR_BUILD_FOLDER/downloads
      export CFLAGS=$CMAKE_ARCH_FLAGS
      export CXXFLAGS=$CMAKE_ARCH_FLAGS
  - sh: cmake -H. -Bbuild -G "$CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE=$CMAKE_CONFIGURATION -DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/Coin3D -DCMAKE_PREFIX_PATH=$APPVEYOR_BUILD_FOLDER/downloads/Coin3D
build_script:
  - cmd: cmake --build build --target ALL_BUILD --config %CONFIGURATION% -- /nologo /verbosity:minimal /maxcpucount
  #- cmd: cmake --build build --target RUN_TESTS --config %CONFIGURATION%
  - cmd: cmake --build build --target INSTALL --config %CONFIGURATION%
  - sh: cmake --build build --target all --config $CMAKE_CONFIGURATION -- -j4
  #- sh: cmake --build build --target test --config $CMAKE_CONFIGURATION
  - sh: cmake --build build --target install --config $CMAKE_CONFIGURATION
test_script:
  - cmd: cd build
  - cmd: ctest -C %CONFIGURATION% -VV
  - sh: cd build
  - sh: ctest -C $CMAKE_CONFIGURATION -VV
after_build:
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%
      set BUILD_ARCHIVE=%APPVEYOR_PROJECT_NAME%-1.0.0-%COMPILER_ID%-%PLATFORM%-%CONFIGURATION%.zip
      7z a %BUILD_ARCHIVE% Coin3D
      appveyor PushArtifact %BUILD_ARCHIVE%
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER
      BUILD_ARCHIVE=$APPVEYOR_PROJECT_NAME-1.0.0-$COMPILER_ID-$CMAKE_PLATFORM-$CMAKE_CONFIGURATION.tar.gz
      tar -czvf $BUILD_ARCHIVE Coin3D/*
      appveyor PushArtifact $BUILD_ARCHIVE
notifications:
  - provider: Email
    to:
    - volkerenderlein@hotmail.com
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
